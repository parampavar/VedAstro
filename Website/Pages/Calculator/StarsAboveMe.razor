@using VedAstro.Library
@attribute [Route(PageRoute.StarsAboveMe)]

<PageTitle>Stars Above Me</PageTitle>

<PageTop ImageName="stars-above-me-banner.png"
         Title="Stars Above Me"
         DescriptionText="Info of stars and planets above you now. View pure astronomical and inteprated Vedic data for past and future anywhere in the world.">
</PageTop>

<UnderConstructionHeader></UnderConstructionHeader>

<div style="width: @GR.W824px">
    <div class="vstack gap-3 mt-4 mb-5" style="max-width: @GR.W412px;">
        <TimeLocationInput @ref="_timeInput" LabelText="Date &amp; Time"/>
        <IconButton ButtonText="Refresh" Color="success" ExtraClass="align-self-end" IconName="uim:process" OnClickCallback="RefreshData"/>
    </div>


        <SkyChartViewer @ref="skyChartViewer" />

@*     @if (isReady)
    {
    }
    else
    {
        @AppData.LoadingImage
    }

 *@    <hr />


    <QuoteTextBlock Author="Carl Sagan" URL="@URL.CarlSaganWiki">
        We're made of star stuff
    </QuoteTextBlock>

</div>


@code {

    private bool isReady = false;

    private List<APIFunctionResult> astrologyCalcs;
    private List<APIFunctionResult> astronomyCalcs;

    private SkyChartViewer? skyChartViewer;
    private Time finalTime = Time.Empty;
    private TimeLocationInput _timeInput;
    private GeoLocationInput _geoLocationInput;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //page should auto show data for user at current location
        //we wait after render to get ready time and location
        if (firstRender) { await RefreshData(); }

    }


    public async Task RefreshData()
    {
        //trigger loading icon
        isReady = false;

        //get data from input fields,
        //on page load, will get today and user's location from IP address
        finalTime = await _timeInput.GetTime();

        //update sky chart
        await skyChartViewer?.Update(finalTime);

        // //get all methods that have only time as input
        // astronomyCalcs = AutoCalculator.FindAndExecuteFunctions(null, finalTime);
        // astrologyCalcs = AutoCalculator.FindAndExecuteFunctions(null, finalTime);

        isReady = true;

        StateHasChanged();

    }


}
