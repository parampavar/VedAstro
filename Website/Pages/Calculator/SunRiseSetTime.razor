@attribute [Route(PageRoute.SunRiseSetTime)]
@using VedAstro.Library


<PageTitle>Sun Rise And Set Time</PageTitle>

<PageTop IconName="flat-color-icons:landscape" Title="Sunrise Time">
    <Description>Accurate sunrise & sunset time based on your coordinates. Time when sun's disc center meets the horizon.</Description>
</PageTop>

<div class="vstack gap-3">

    <h4>Sunrise:@_sunRiseTime</h4>
    <h4>Sunset:@_sunSetTime</h4>

    <GeoLocationInput @ref="_geoLocationInput" />

    <IconButton ButtonText="Calculate" IconName="uim:process" OnClickCallback="UpdateSunRiseSetTime"></IconButton>

</div>

@code {
    //FIELDS
    private GeoLocationInput _geoLocationInput;
    private string? _sunSetTime = "";
    private string? _sunRiseTime = "";
    public bool PageReady { get; set; }



    //█░░ █ █▀▀ █▀▀ █▀▀ █▄█ █▀▀ █░░ █▀▀   █▀▄▀█ █▀▀ ▀█▀ █░█ █▀█ █▀▄ █▀
    //█▄▄ █ █▀░ ██▄ █▄▄ ░█░ █▄▄ █▄▄ ██▄   █░▀░█ ██▄ ░█░ █▀█ █▄█ █▄▀ ▄█
    //METHODS THAT CAN IMPLEMENT ASYNC ERROR HANDLER 

    //auto calculate sun rise/set time every time location is changed
    //called every time after the component has finished rendering
    protected override void OnAfterRender(bool firstRender) => UpdateSunRiseSetTime();




    //█▀█ █▀█ █ █░█ ▄▀█ ▀█▀ █▀▀   █▀▄▀█ █▀▀ ▀█▀ █░█ █▀█ █▀▄ █▀
    //█▀▀ █▀▄ █ ▀▄▀ █▀█ ░█░ ██▄   █░▀░█ ██▄ ░█░ █▀█ █▄█ █▄▀ ▄█

    private void UpdateSunRiseSetTime()
    {
        //parse location received from user
        var geoLocation = _geoLocationInput.GetGeoLocation();

        //get time now
        var timeNow = Time.NowSystem(geoLocation);

        var rise = Calculate.SunriseTime(timeNow);
        var set = Calculate.SunsetTime(timeNow);

        //show lmt time as string
        _sunRiseTime = rise.GetStdDateTimeOffsetText();
        _sunSetTime = set.GetStdDateTimeOffsetText();

    }

}