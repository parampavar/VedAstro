@namespace Website.Pages
@using VedAstro.Library;
@using System.Xml.Linq


@*render, but visibily hide untill ready to show data*@
<div style="@(_isReadyToShow ? "" : "display: none;")" class="vstack gap-3">

    @* Auto Prediction *@
    <div>
        <IconTitle Title="Auto Prediction" IconName="twemoji:robot" TitleHolder="h4" />
        <AIPrediction @ref="_aiPrediction" />
    </div>
    
    @* Strength *@
    <div class="mt-4">
        <IconTitle Title="Strength" IconName="twemoji:antenna-bars" TitleHolder="h4" />
        @*only show when all is loaded*@
        <StrengthChart @ref="_strengthChart" />
    </div>
    
    @* Data *@
    <div class="mt-5">
        <IconTitle Title="Data" IconName="twemoji:abacus" TitleHolder="h4">
            <ButtonRow>
                <IconButton SmallSize="true"
                            Color="success"
                            IconName="bx:save"
                            ButtonText="Save"
                            OnClickCallback="@(() => _jsRuntime.FunFeaturePopUp("Save Horoscope Data"))" />
                <IconButton SmallSize="true"
                            TooltipText="Get this data for your app or service"
                            Color="primary"
                            IconName="fluent-mdl2:embed"
                            ButtonText="Embed"
                            ClickUrl="@PageRoute.APIBuilder" />
            </ButtonRow>
        </IconTitle>
        <PlanetHouseInfoViewer @ref="_planetHouseInfoViewer" />
    </div>
    
    @* Reference *@
    <div class="mt-5">
        <IconTitle Title="Reference" IconName="twemoji:books" TitleHolder="h4" />
        <HoroscopeReferenceList @ref="_horoscopeReferenceList" />
    </div>

</div>


@code {
    private Person _selectedPerson = Person.Empty;
    private bool _isReadyToShow = false;

    private HoroscopeReferenceList _horoscopeReferenceList = null;
    private AIPrediction _aiPrediction = null;
    private PlanetHouseInfoViewer _planetHouseInfoViewer = null;
    private StrengthChart _strengthChart = null;



    /// <summary>
    /// Takes the inputed person and makes the visible chart
    /// starts the process
    /// </summary>
    public async Task SetPerson(Person selectedPerson)
    {
        //hide previous if any
        _isReadyToShow = false;

        //load planet & house data (from WASM)
        _selectedPerson = selectedPerson;

        //load prediction data (from API)
        await _horoscopeReferenceList.ShowPrediction(_selectedPerson);

        //show ai prediction
        await _aiPrediction?.ShowPrediction(_selectedPerson);

        await _planetHouseInfoViewer.Show(_selectedPerson);

        await _strengthChart.Show(_selectedPerson);

        //make visible
        _isReadyToShow = true;

        //need to make change visible
        StateHasChanged();

        //close loading box
        _jsRuntime.HideAlert();



        //---------------------------

    }




}
