@namespace Website.Pages
@using VedAstro.Library;
@using System.Xml.Linq

@*Small Help box with tooltip showing info usually placed next to txt
    - with click to show other wise very annoying
*@

@if (Label != "")
{
	<div class="hstack gap-2 align-content-center">
		<h4 class="mt-2">@Label</h4>
		<div @ref="helpIconHolder" @onmouseenter="OnMouseOverHelpIcon" style="cursor: help;">
			<span class="iconify" data-icon="icon-park:help" data-width="@(SmallIcon?smallIconSize:bigIconSize)"></span>
		</div>
	</div>
}
else
{
	<div @ref="helpIconHolder" @onmouseenter="OnMouseOverHelpIcon" style="cursor: help; float: right; margin-left: 8px;margin-top: -2px; scale: 0.75;opacity: 0.8;">
		<span class="iconify" data-icon="icon-park:help" data-width="@(SmallIcon?smallIconSize:bigIconSize)"></span>
	</div>
}



@code {

	/// <summary>
	/// Text that is shown next help icon
	/// </summary>
	[Parameter]
	public string Label { get; set; } = "";

	/// <summary>
	/// Set true if for small icon size 19px next to form labels
	/// default false, not need to be set
	/// </summary>
	[Parameter]
	public bool SmallIcon { get; set; } = false;


	/// <summary>
	/// If true will show tooltip on hover else, will default to show on click
	/// </summary>
	[Parameter]
	public bool ShowOnHover { get; set; } = false;

	/// <summary>
	/// sets Tippy.js interactive property, defaults to true, so users can copy help text
	/// </summary>
	[Parameter]
	public bool Interactive { get; set; } = true;

	private string smallIconSize = "19";
	private string bigIconSize = "22";

	/// <summary>
	/// Text that goes inside tooltip
	/// </summary>
	[Parameter]
	public string HelpText { get; set; }

	private ElementReference helpIconHolder;


	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		//setup the tooltip
		//- html for multi line
		//- interactive for selecting text
		var tooltipData = new
		{
			content = HelpText,
			interactive = Interactive,
			allowHTML = true,
			placement = "right",
			trigger = ShowOnHover ? "mouseenter" : "click" //set trigger based on user set default to click
		};


		//attach tooltip lib to element
		await _jsRuntime.Tippy(helpIconHolder, tooltipData);
	}

	private void OnMouseOverHelpIcon()
	{
		//make a log
		//WebLogger.Data("HelpBox : " + HelpText);
	}

}
